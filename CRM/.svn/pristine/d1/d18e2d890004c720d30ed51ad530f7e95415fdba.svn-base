package com.crm.cp.standard.home.controller;

import java.util.HashMap;
import java.util.List;
import java.util.Map;

import javax.annotation.Resource;
import javax.servlet.http.HttpSession;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.servlet.ModelAndView;

import com.crm.cp.sales.cont.service.contrService;
import com.crm.cp.sales.cont.vo.contrResultVO;
import com.crm.cp.sales.oppt.service.OpptService;
import com.crm.cp.sales.oppt.vo.OpptVO;
import com.crm.cp.sales.oppt.vo.pipeLineVO;
import com.crm.cp.standard.data_board.service.Data_boardService;
import com.crm.cp.standard.iuser.vo.IuserVO;
import com.crm.cp.standard.menu.service.MenuService;
import com.crm.cp.standard.menu.vo.MenuVO;
import com.crm.cp.standard.notice.service.NoticeService;
import com.crm.cp.standard.schedule.service.ScheduleService;

@Controller
public class HomeController {
	
	@Autowired
	ScheduleService scheduleService;
	
	@Autowired
	NoticeService noticeService;
	
	@Autowired
	Data_boardService data_boardService;
	
	@Resource
	MenuService menuService;
	
	@Autowired
	OpptService opptService;
	
	@Autowired
	contrService contrService;
	
	@RequestMapping(value = "/home", method = RequestMethod.POST)
	public ModelAndView noticeMain(@ModelAttribute IuserVO user, HttpSession session) {
		session.setAttribute("user", user.getId_nm());
		String userId = session.getAttribute("user").toString();
Map<String, Object> schedule = (Map<String, Object>) scheduleService.searchOneRecentSchedule(userId);
		
		if(schedule!=null){
			String SCHEDULE_CONT = schedule.get("SCHEDULE_CONT").toString();
			if(SCHEDULE_CONT.length() > 20){
				schedule.replace("SCHEDULE_CONT", SCHEDULE_CONT.toString().substring(0, 20)+"....");
			}
		}
		
		Map<String, Object> notice = (Map<String, Object>) noticeService.searchOneRecentNotice(userId);
		
		if(notice!=null){
			String nTitle = notice.get("TITLE").toString();
			if(nTitle.length() > 20){
				notice.replace("TITLE", nTitle.toString().substring(0, 20)+"....");
			}
		}
		
		Map<String, Object> data_board = (Map<String, Object>) data_boardService.searchOneRecentData_board();
		
		if(data_board!=null){
			String dbTitle = data_board.get("TITLE").toString();
			if(dbTitle.length() > 20){
				data_board.replace("TITLE", dbTitle.toString().substring(0, 20)+"....");
			}
		}
		OpptVO oppt = opptService.searchOneRecentOppt(userId);
		List<MenuVO> menuList = menuService.selectAll(session);
		
		ModelAndView mov = new ModelAndView("home");
		
		Map<String,String> map = new HashMap<String,String>(0);
		
		contrResultVO cr = contrService.findEmpCd(userId);
		System.out.println(cr.getEmp_cd());
		map.put("empcd",cr.getEmp_cd());
		map.put("userId",userId);
		mov.addObject("loginIuserNm",cr.getIuser_nm());
		mov.addObject("loginOrgNm",cr.getOrg_nm());
		
		contrResultVO contrResultSum = contrService.contrResultSum(map);
		pipeLineVO pipeLineSum = opptService.pipeLineSum(map);
		mov.addObject("pipeLineSum",pipeLineSum);
		mov.addObject("contrResultSum",contrResultSum);
		mov.addObject("schedule", schedule);
		mov.addObject("notice", notice);
		mov.addObject("menuList", menuList);
		mov.addObject("data_board", data_board);
		mov.addObject("oppt", oppt);
		return mov;
	}

	@RequestMapping(value="/home", method=RequestMethod.GET)
	public ModelAndView homePage(HttpSession session){
		if(session.getAttribute("user")==null){
			return new ModelAndView("redirect:/");
		}
		String userId = session.getAttribute("user").toString();
		
		Map<String, Object> schedule = (Map<String, Object>) scheduleService.searchOneRecentSchedule(userId);
		
		if(schedule!=null){
			String SCHEDULE_CONT = schedule.get("SCHEDULE_CONT").toString();
			if(SCHEDULE_CONT.length() > 20){
				schedule.replace("SCHEDULE_CONT", SCHEDULE_CONT.toString().substring(0, 20)+"....");
			}
		}
		
		Map<String, Object> notice = (Map<String, Object>) noticeService.searchOneRecentNotice(userId);
		
		if(notice!=null){
			String nTitle = notice.get("TITLE").toString();
			if(nTitle.length() > 20){
				notice.replace("TITLE", nTitle.toString().substring(0, 20)+"....");
			}
		}
		
		Map<String, Object> data_board = (Map<String, Object>) data_boardService.searchOneRecentData_board();
		
		if(data_board!=null){
			String dbTitle = data_board.get("TITLE").toString();
			if(dbTitle.length() > 20){
				data_board.replace("TITLE", dbTitle.toString().substring(0, 20)+"....");
			}
		}
		
		OpptVO oppt = opptService.searchOneRecentOppt(userId);
		List<MenuVO> menuList = menuService.selectAll(session);
		
		ModelAndView mov = new ModelAndView("home");
		Map<String,String> map = new HashMap<String,String>(0);
		
		contrResultVO cr = contrService.findEmpCd(userId);
		map.put("empcd",cr.getEmp_cd());
		map.put("userId",userId);
		mov.addObject("loginIuserNm",cr.getIuser_nm());
		mov.addObject("loginOrgNm",cr.getOrg_nm());

		contrResultVO contrResultSum = contrService.contrResultSum(map);
		pipeLineVO pipeLineSum = opptService.pipeLineSum(map);
		mov.addObject("pipeLineSum",pipeLineSum);
		mov.addObject("contrResultSum",contrResultSum);
		mov.addObject("schedule", schedule);
		mov.addObject("notice", notice);
		mov.addObject("menuList", menuList);
		mov.addObject("data_board", data_board);
		mov.addObject("oppt", oppt);
		return mov;
		
	}
	
}
